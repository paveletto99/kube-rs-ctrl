apiVersion: v1
kind: ConfigMap
metadata:
  name: otel-collector-conf
  namespace: observability
  labels:
    app: opentelemetry
    component: otel-collector-conf
data:
  otel-collector-config: |
    receivers:
      otlp:
        protocols:
          grpc:
            endpoint: ${env:MY_POD_IP}:4317
          http:
            endpoint: ${env:MY_POD_IP}:4318
            cors:
              allowed_origins:
                - "http://shell.localhost"
    exporters:
      logging:
        loglevel: debug
      jaeger:
        endpoint: simplest-collector:14250
        tls:
          insecure: true
        sending_queue:
          num_consumers: 4
          queue_size: 100
        retry_on_failure:
          enabled: true
      prometheusremotewrite:
        endpoint: http://prometheus-service:9090/api/v1/write
        tls:
          insecure: true
    processors:
      batch:
      memory_limiter:
        # 80% of maximum memory up to 2G
        limit_mib: 400
        # 25% of limit up to 2G
        spike_limit_mib: 100
        check_interval: 5s
      resource:
        attributes:
          - key: cloud.zone
            value: zone-1
            action: upsert
          - key: k8s.cluster.name
            from_attribute: k8s-cluster
            action: insert
          - key: test.key
            value: "ðŸ§ª-test"
            action: insert
      filter/healthz:
        error_mode: ignore
        traces:
          span:
            - 'attributes["http.target"] == "/healthz"'
    extensions:
      health_check:
      pprof:
        endpoint: :1888
      zpages:
        endpoint: :55679
      memory_ballast:
        # Memory Ballast size should be max 1/3 to 1/2 of memory.
        size_mib: 165
    service:
      extensions: [pprof, zpages, health_check, memory_ballast]
      pipelines:
        traces:
          receivers: [otlp]
          processors: [batch, memory_limiter, resource, filter/healthz]
          exporters: [jaeger]
        metrics:
          receivers: [otlp]
          processors: [batch,memory_limiter]
          exporters: [logging, prometheusremotewrite]
        logs:
          receivers: [otlp]
          processors: [batch,memory_limiter]
          exporters: [logging]
---
apiVersion: v1
kind: Service
metadata:
  name: otel-collector
  namespace: observability
  labels:
    app: opentelemetry
    component: otel-collector
spec:
  ports:
    - name: otlp-grpc # Default endpoint for OpenTelemetry gRPC receiver.
      port: 4317
      protocol: TCP
      targetPort: 4317
    - name: otlp-http # Default endpoint for OpenTelemetry HTTP receiver.
      port: 4318
      protocol: TCP
      targetPort: 4318
    - name: zpages
      port: 55679
      protocol: TCP
      targetPort: 55679
    - name: health-check
      port: 13133
      protocol: TCP
      targetPort: 13133
    - name: metrics # Default endpoint for querying metrics.
      port: 8888
      protocol: TCP
      targetPort: 8888
    - name: metrics-app # Default endpoint for querying metrics.
      port: 8889
      protocol: TCP
      targetPort: 8889
  selector:
    component: otel-collector
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: otel-collector
  namespace: observability
  labels:
    app: opentelemetry
    component: otel-collector
spec:
  replicas: 1 # scale out based on your usage
  selector:
    matchLabels:
      app: opentelemetry
  template:
    metadata:
      labels:
        app: opentelemetry
        component: otel-collector
      annotations:
        linkerd.io/inject: enabled
    spec:
      containers:
        - name: otel-collector
          image: otel/opentelemetry-collector-contrib:0.80.0
          command:
            - "/otelcol-contrib"
            - "--config=/conf/otel-collector-config.yaml"
          resources:
            limits:
              cpu: 1
              memory: 2Gi
            requests:
              cpu: 200m
              memory: 400Mi
          ports:
            - containerPort: 55679 # Default endpoint for ZPages.
            - containerPort: 4317 # Default endpoint for OpenTelemetry receiver.
            - containerPort: 4318 # otlp http
            - containerPort: 14250 # Default endpoint for Jaeger gRPC receiver.
            - containerPort: 14268 # Default endpoint for Jaeger HTTP receiver.
            - containerPort: 9411 # Default endpoint for Zipkin receiver.
            - containerPort: 8888 # Default endpoint for querying metrics.
            - containerPort: 8889 # Application endpoint for querying metrics.
            - containerPort: 13133 # health check
          env:
            - name: MY_POD_IP
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: status.podIP
          volumeMounts:
            - name: otel-collector-config-vol
              mountPath: /conf
          livenessProbe:
            httpGet:
              path: /
              port: 13133
          readinessProbe:
            httpGet:
              path: /
              port: 13133
      volumes:
        - configMap:
            name: otel-collector-conf
            items:
              - key: otel-collector-config
                path: otel-collector-config.yaml
          name: otel-collector-config-vol
