# Ingress
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: sandbox-o4a-api-gateway
#   namespace: dev
#   annotations:
#     nginx.ingress.kubernetes.io/ssl-redirect: "false"
#     # nginx.ingress.kubernetes.io/use-regex: "true"
#     # nginx.ingress.kubernetes.io/service-upstream: "true"
# spec:
#   ingressClassName: nginx
#   rules:
#     - host: "*.localhost"
#       http:
#         paths:
#           - path: /
#             pathType: Prefix
#             backend:
#               service:
#                 name: srvcmps
#                 port:
#                   name: http
#     - host: idp.localhost
#       http:
#         paths:
#           - path: /
#             pathType: Prefix
#             backend:
#               service:
#                 name: srvidp
#                 port:
#                   name: http
#     - host: shell.localhost
#       http:
#         paths:
#           - path: /
#             pathType: Prefix
#             backend:
#               service:
#                 name: charybui-shell-svc
#                 port:
#                   name: http
# ---
# Ingress 4 observability
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sandbox-observability
  namespace: observability
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    nginx.ingress.kubernetes.io/cors-allow-origin: "http://localhost:3000"
    nginx.ingress.kubernetes.io/enable-cors: "true"
spec:
  ingressClassName: nginx
  rules:
    - host: jaeger.localhost
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: simplest-query
                port:
                  number: 16686
    - host: otlptrace.localhost
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: otel-collector
                port:
                  name: otlp-http
    - host: grafana.localhost
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: grafana
                port:
                  number: 3000
    - host: metrics.localhost
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: prometheus-service
                port:
                  number: 9090

---
# https://kubernetes.io/docs/concepts/services-networking/ingress/
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: argo-ingress
  namespace: argo
  annotations:
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
spec:
  ingressClassName: nginx
  rules:
  - host: argo.localhost
    http:
      paths:
      - path: /wf
        pathType: Prefix
        backend:
          service:
            name: argo-server
            port:
              number: 2746
      - path: /cd
        pathType: Prefix
        backend:
          service:
            name: argocd-server
            port:
              name: https
---


---
#  TODO: update with cert-manager
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: example-ingress
#   namespace: default
#   annotations:
#     kubernetes.io/ingress.class: "nginx"
#     cert-manager.io/cluster-issuer: "letsencrypt-production"
#     # Optional: Enable automatic redirection from HTTP to HTTPS
#     nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
# spec:
#   tls:
#   - hosts:
#     - example.com
#     - www.example.com
#     secretName: example-com-tls
#   rules:
#   - host: example.com
#     http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: your-service
#             port:
#               number: 80
#   - host: www.example.com
#     http:
#       paths:
#       - path: /
#         pathType: Prefix
#         backend:
#           service:
#             name: your-service
#             port:
#               number: 80

#
